{"version":3,"sources":["components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/cardType/cardType.module.scss","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/cardStatus/cardStatus.module.scss","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/age/age.module.scss","components/pages/main/quizPages/quizSettings/controls/controls.module.scss","app.module.scss","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/condition.module.scss","components/blocks/Breadcrumbs/breadcrumbs.module.scss","components/blocks/sidebar/sidebar.module.scss","components/button/button.module.scss","components/pages/main/quizPages/quizSettings/addCondition/addCondition.module.scss","components/pages/main/quizPages/quizSettings/quizSettings.module.scss","components/pages/main/main.module.scss","components/blocks/Breadcrumbs/crumb/crumb.js","components/blocks/Breadcrumbs/crumbsList/crumbsList.js","components/blocks/Breadcrumbs/breadcrumbs.js","components/blocks/sidebar/menuList/menuListItem/menuListItem.js","components/blocks/sidebar/menuList/menuList.js","components/blocks/sidebar/sidebar.js","components/pages/main/menuList/menuListItem/menuListItem.js","components/pages/main/menuList/menuList.js","components/button/button.js","actions.js","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/cardType/cardType.js","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/cardStatus/cardStatus.js","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/conditionTypes/age/age.js","components/pages/main/quizPages/quizSettings/quizConditionsList/condition/condition.js","components/pages/main/quizPages/quizSettings/quizConditionsList/quizConditionsList.js","components/pages/main/quizPages/quizSettings/controls/controls.js","components/pages/main/quizPages/quizSettings/addCondition/addCondition.js","components/pages/main/quizPages/quizSettings/quizSettings.js","components/pages/main/quizPages/conditions.js","components/pages/main/quizPages/logic.js","components/pages/main/quizPages/parameters.js","components/pages/main/quizPages/questions.js","components/pages/main/main.js","components/pages/users/users.js","components/pages/blackLists/blackLists.js","components/pages/callCenter/callCenter.js","App.js","reducer.js","index.js"],"names":["module","exports","Crumb","children","CrumbsList","className","BreadCrumbs","style","breadcrumbs","MenuListItem","to","activeClassName","MenuList","classes","Sidebar","sidebar","text","Button","listener","button","onClick","changeType","val","id","type","payload","deleteCond","addCond","addCardType","condId","changeCardType","typeId","value","cardType","removeCardType","cond","addRange","changeRange","rangeId","target","range","removeRange","addStatus","changeStatus","statusId","status","removeStatus","sendForm","testForm","resetData","connect","state","conditions","actions","Type","changeListener","onChange","defaultValue","myCondition","filter","item","key","count","types","length","typesArray","i","e","deleteButton","push","addButton","Status","statuses","statusesArray","cardStatus","ranges","rangeArray","rangeItem","from","name","undefined","condition","options","label","selectChange","list","newArr","map","index","isSended","controls","testButton","continueButton","data","sendType","useState","message","setMessage","Message","send","a","body","JSON","stringify","setTimeout","fetch","method","sendletter","console","log","onSubmit","preventDefault","quizConditions","Conditions","Logic","Parameters","Questions","Main","quizNav","exact","path","Users","BlackLists","CallCenter","App","main","content","shortid","require","addItem","prevArr","template","itemProperty","newItem","changeProp","propArr","propId","propName","newValue","conditionIndex","indexOf","propIndex","removeItem","splice","reducer","action","newItems","generate","newConditions","ind","newCondition","changedWithRange","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f22c6d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardType\":\"cardType_cardType__31U-G\",\"deleteButton\":\"cardType_deleteButton__3kVaJ\",\"addButton\":\"cardType_addButton__2srza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardStatus\":\"cardStatus_cardStatus__2ooZo\",\"deleteButton\":\"cardStatus_deleteButton__3v34Y\",\"addButton\":\"cardStatus_addButton__Siboe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rangeItem\":\"age_rangeItem__pmzYX\",\"deleteButton\":\"age_deleteButton__hg9lb\",\"addButton\":\"age_addButton__3LVGI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__3fmKG\",\"continueButton\":\"controls_continueButton__2-g2h\",\"testButton\":\"controls_testButton__1CF7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__2j2Ay\",\"content\":\"app_content__1Tlnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"condition\":\"condition_condition__PCzJY\",\"deleteButton\":\"condition_deleteButton__3IDCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbs\":\"breadcrumbs_breadcrumbs__bAuYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__1upaf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2F37G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCond\":\"addCondition_addCond__pjM8o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizConditions\":\"quizSettings_quizConditions__cRQbp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizNav\":\"main_quizNav__3FFKH\"};","import React from 'react';\r\n\r\nconst Crumb = ({children}) => {\r\n    return (\r\n        <li>\r\n            {children}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Crumb;","import React from 'react';\r\nimport Crumb from '../crumb/crumb'\r\n\r\nconst CrumbsList = () => {\r\n    return (\r\n        <ul>\r\n            <Crumb><i className=\"fas fa-home\"></i> /</Crumb>\r\n            <Crumb>Опросы /</Crumb>\r\n            <Crumb>Создать опрос</Crumb>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default CrumbsList;","import React from 'react';\r\nimport CrumbsList from './crumbsList/crumbsList'\r\nimport style from './breadcrumbs.module.scss'\r\n\r\nconst BreadCrumbs = () => {\r\n    return (\r\n        <div className={style.breadcrumbs}>\r\n            <CrumbsList></CrumbsList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BreadCrumbs;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuListItem = ({ children, to }) => {\r\n    return (\r\n        <li>\r\n            <NavLink to={to} activeClassName=\"active\">\r\n                {children}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MenuListItem;","import React from 'react';\r\n\r\nimport MenuListItem from './menuListItem/menuListItem';\r\n\r\nconst MenuList = ({classes=''}) => {\r\n    return (\r\n        <ul className={classes}>\r\n            <MenuListItem to='/'><i className=\"far fa-file-alt\"></i>Опросы</MenuListItem>\r\n            <MenuListItem to='/users'><i className=\"fas fa-users\"></i>Пользователи</MenuListItem>\r\n            <MenuListItem to='/blackLists'><i className=\"far fa-flag\"></i>Черные списки</MenuListItem>\r\n            <MenuListItem to='/callCenter'><i className=\"fas fa-phone-alt\"></i>Колл-центр</MenuListItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport MenuList from './menuList/menuList'\r\nimport style from './sidebar.module.scss'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={style.sidebar}>\r\n            <MenuList></MenuList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuListItem = ({ text, to }) => {\r\n    return (\r\n        <li>\r\n            <NavLink to={to} activeClassName=\"active\">\r\n                {text}\r\n            </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default MenuListItem;","import React from 'react';\r\n\r\nimport MenuListItem from './menuListItem/menuListItem';\r\n\r\nconst MenuList = ({classes=''}) => {\r\n    return (\r\n        <ul className={classes}>\r\n            <MenuListItem text='Параметры' to='/main/parameters'></MenuListItem>\r\n            <MenuListItem text='Вопросы' to='/main/questions'></MenuListItem>\r\n            <MenuListItem text='Логика' to='/main/logic'></MenuListItem>\r\n            <MenuListItem text='Условия' to='/main/conditions'></MenuListItem>\r\n            <MenuListItem text='Респонденты' to='/'></MenuListItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport style from './button.module.scss'\r\n\r\nconst Button = ({ listener, children, classes='' }) => {\r\n    return (\r\n        <button className={`${style.button} ${classes}`} onClick={listener}>\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","export const changeType = (val, id)=>({type:'CHANGE_TYPE', payload:val, id:id})\r\nexport const deleteCond = (id) =>({type:'DELETE_COND', id:id})\r\nexport const addCond = ()=>({type:'ADD_COND'})\r\n\r\nexport const addCardType = (condId)=>({type:'ADD_CARD_TYPE', id:condId})\r\nexport const changeCardType = (condId, typeId, value)=>({type:'CHANGE_CARD_TYPE', id:condId, cardType:typeId, payload:value})\r\nexport const removeCardType = (condId, typeId)=>({type:'REMOVE_CARD_TYPE', cond:condId, cardType:typeId})\r\n\r\nexport const addRange = (id)=>({type:'ADD_RANGE', id:id})\r\nexport const changeRange = (condId, rangeId, target) => ({type:'CHANGE_RANGE', cond:condId, range:rangeId, payload:target})\r\nexport const removeRange = (condId, rangeId)=>({type:'REMOVE_RANGE', cond:condId, range:rangeId})\r\n\r\nexport const addStatus = (condId)=>({type:'ADD_STATUS', id:condId})\r\nexport const changeStatus = (condId, statusId, value)=>({type:'CHANGE_STATUS', id:condId, status:statusId, payload:value})\r\nexport const removeStatus = (condId, statusId)=>({type:'REMOVE_STATUS', cond:condId, status:statusId})\r\n\r\nexport const sendForm = ()=>({type:'SEND'})\r\nexport const testForm = ()=>({type:'TEST'})\r\nexport const resetData = ()=>({type:'RESET'})","import React from 'react';\r\nimport Button from '../../../../../../../../button/button'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../../../../../../../actions'\r\nimport style from './cardType.module.scss'\r\n\r\nconst CardType = ({ conditions, condId, addCardType, removeCardType, changeCardType }) => {\r\n\r\n    const Type = ({changeListener, val}) => {\r\n        return (\r\n            <select value={val} onChange={changeListener}>\r\n                <option defaultValue value=\"gold\">Gold</option>\r\n                <option value=\"silver\">Silver</option>\r\n                <option value=\"platinum\">Platinum</option>\r\n                <option value=\"visa\">Visa</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n    const myCondition = conditions.filter((item)=>item.key === condId)[0]\r\n\r\n    const count = myCondition.types.length\r\n\r\n    const typesArray = []\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        const item = (\r\n            <label key={myCondition.types[i].id}> Тип {i + 1}\r\n                <Type val={myCondition.types[i].type} changeListener={(e)=>{changeCardType(condId, myCondition.types[i].id, e.target.value)}}></Type>\r\n                <Button classes={style.deleteButton} listener={() => { removeCardType(condId, myCondition.types[i].id) }}>Удалить тип карты</Button>\r\n            </label>\r\n        )\r\n        typesArray.push(item)\r\n    }\r\n\r\n    return (\r\n        <div className={style.cardType}>\r\n            {typesArray}\r\n            <Button classes={style.addButton} listener={() => { addCardType(condId) }}>Добавить тип карты</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        conditions: state.conditions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(CardType);","import React from 'react';\r\nimport Button from '../../../../../../../../button/button'\r\nimport * as actions from '../../../../../../../../../actions'\r\nimport {connect} from 'react-redux'\r\nimport style from './cardStatus.module.scss'\r\n\r\nconst CardStatus = ({conditions, condId, addStatus, removeStatus, changeStatus}) => {\r\n\r\n    const Status = ({changeListener, val}) => {\r\n        return (\r\n            <select value={val} onChange={changeListener}>\r\n                <option defaultValue value=\"active\">Активна</option>\r\n                <option value=\"unactive\">Неактивна</option>\r\n            </select>\r\n        )\r\n    }\r\n\r\n    const myCondition = conditions.filter((item)=>item.key === condId)[0]\r\n\r\n    const count = myCondition.statuses.length\r\n\r\n    const statusesArray = []\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        const item = (\r\n            <label key={myCondition.statuses[i].id}> Статус {i + 1}\r\n                <Status val={myCondition.statuses[i].status} changeListener={(e)=>{changeStatus(condId, myCondition.statuses[i].id, e.target.value)}}></Status>\r\n                <Button classes={style.deleteButton} listener={()=>{removeStatus(condId, myCondition.statuses[i].id)}}>Удалить статус карты</Button>\r\n            </label>\r\n        )\r\n        statusesArray.push(item)\r\n    }\r\n\r\n    return (\r\n        <div className={style.cardStatus}>\r\n            {statusesArray}\r\n            <Button classes={style.addButton} listener={()=>{addStatus(condId)}}>Добавить статус карты</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        conditions: state.conditions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(CardStatus);","import React from 'react';\r\nimport Button from '../../../../../../../../button/button'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../../../../../../../actions'\r\nimport style from './age.module.scss'\r\n\r\nconst Age = ({ conditions, condId, addRange, removeRange, changeRange }) => {\r\n\r\n    const myCondition = conditions.filter((item) => item.key === condId)[0]\r\n\r\n    let count = myCondition.ranges.length\r\n\r\n    const rangeArray = []\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        const item = (\r\n            <div key={myCondition.ranges[i].id} id={myCondition.ranges[i].id} className={style.rangeItem}>\r\n                <div>\r\n                    Диапазон {i + 1}\r\n                </div>\r\n                <div>\r\n                    <label> от\r\n                        <input onChange={(e) => { changeRange(condId, myCondition.ranges[i].id, e.target) }} value={myCondition.ranges[i].from} name=\"from\" type=\"text\" />\r\n                    </label>\r\n                    <label>до\r\n                        <input value={myCondition.ranges[i].to} onChange={(e) => { changeRange(condId, myCondition.ranges[i].id, e.target) }} name=\"to\" type=\"text\" />\r\n                    </label>\r\n                </div>\r\n                <Button classes={style.deleteButton} listener={() => { removeRange(condId, myCondition.ranges[i].id) }}>Удалить диапазон</Button>\r\n            </div>\r\n        )\r\n        rangeArray.push(item)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {rangeArray}\r\n            <Button classes={style.addButton}  listener={() => { addRange(condId) }}>Добавить диапазон</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        conditions: state.conditions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Age);","import React from 'react';\r\nimport Button from '../../../../../../button/button'\r\nimport * as actions from '../../../../../../../actions'\r\nimport {connect} from 'react-redux'\r\nimport CardType from './conditionTypes/cardType/cardType';\r\nimport CardStatus from './conditionTypes/cardStatus/cardStatus'\r\nimport Age from './conditionTypes/age/age'\r\nimport style from './condition.module.scss'\r\n\r\nconst Condition = ({type, changeType, deleteCond, id, condition}) => {\r\n\r\n    const selectChange=(e)=>{\r\n        if(e.target.value === e.target.options[0].label){\r\n            return\r\n        }\r\n        changeType(e.target.value, id)\r\n    }\r\n\r\n    return (\r\n        <div className={style.condition}>\r\n            <select type=\"select\" onChange={(e)=>selectChange(e)}>\r\n                <option defaultValue value=\"empty\">Выберите условие</option>\r\n                <option value=\"age\">Возраст респондента</option>\r\n                <option value=\"card-type\">Тип карты лояльности</option>\r\n                <option value=\"card-status\">Статус карты лояльности</option>\r\n            </select>\r\n\r\n            {type === 'age' \r\n                ? <Age condId={id}></Age>\r\n                : type === 'card-type'\r\n                    ? <CardType condId={id} ></CardType> \r\n                    : type === 'card-status'\r\n                        ? <CardStatus condId={id}></CardStatus> \r\n                        : ''}\r\n\r\n            <Button classes={style.deleteButton} listener={()=>deleteCond(condition.key)}>Удалить условие</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(undefined, actions)(Condition);","import React from 'react';\r\nimport Condition from './condition/condition'\r\nimport { connect } from 'react-redux'\r\n\r\nconst QuizConditionsList = ({ list }) => {\r\n    const newArr = list.map((item, index) => {\r\n        return (\r\n            <li key={item.key} >\r\n                <p>Условие {index + 1}</p>\r\n                <Condition type={item.type} id={item.key} condition={item}></Condition>\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <ul>\r\n            {newArr}\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        list: state.conditions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, undefined)(QuizConditionsList);","import React from 'react';\r\nimport Button from '../../../../../button/button'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../../../../actions'\r\nimport style from './controls.module.scss'\r\n\r\nconst Controls = ({sendForm, testForm}) => {\r\n\r\n    return (\r\n        <div className={style.controls}>\r\n            <Button classes={style.testButton}  listener={testForm}>Тестировать опрос</Button>\r\n            <Button classes={style.continueButton} listener={sendForm}>Далее</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        isSended: state.isSended\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Controls);","import React from 'react';\r\nimport Button from '../../../../../button/button'\r\nimport * as actions from '../../../../../../actions'\r\nimport {connect} from 'react-redux'\r\nimport style from './addCondition.module.scss'\r\n\r\nconst AddCondition = ({addCond}) => {\r\n    return (\r\n        <Button classes={style.addCond} listener={()=>{addCond()}}>Добавить условие</Button>\r\n    );\r\n}\r\n\r\nexport default connect(undefined, actions)(AddCondition);","import React, { useState } from 'react';\r\nimport QuizConditionsList from './quizConditionsList/quizConditionsList'\r\nimport Controls from './controls/controls'\r\nimport AddCondition from './addCondition/addCondition'\r\nimport style from './quizSettings.module.scss'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../../../../../actions'\r\n\r\nconst QuizSettings = ({ data, sendType, resetData }) => {\r\n\r\n    const [message, setMessage] = useState('')\r\n\r\n    const Message = ({ message }) => {\r\n        return (\r\n            <p>{message}</p>\r\n        )\r\n    }\r\n\r\n    const send = async (sendType) => {\r\n        let body = JSON.stringify(data)\r\n\r\n        if(!data.length){\r\n            setMessage('Создайет опрос перед отправкой')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 2000)\r\n            return\r\n        }\r\n\r\n        try {\r\n            let sendletter\r\n\r\n            if (sendType === 'send' && data.length) {\r\n                sendletter = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                    method: 'POST',\r\n                    body: body\r\n                })\r\n\r\n                let response = await sendletter.status\r\n\r\n                if (response === 201) {\r\n                    setMessage('Опрос успешно создан')\r\n                    setTimeout(() => {\r\n                        resetData()\r\n                        setMessage('')\r\n                    }, 2000)\r\n                }\r\n\r\n            } else if (sendType === 'test' && data.length) {\r\n                sendletter = await fetch(\"https://jsonplaceholder.typicode.com/posts\", {\r\n                    method: 'POST',\r\n                    body: body\r\n                })\r\n\r\n                let response = await sendletter.status\r\n\r\n                if (response === 201) {\r\n                    setMessage('Опрос отправлен на тестирование')\r\n                    setTimeout(() => {\r\n                        resetData()\r\n                        setMessage('')\r\n                    }, 2000)\r\n                }\r\n            }\r\n        }\r\n        catch (err) {\r\n            setMessage('Произошла непредвиденная ошибка')\r\n            setTimeout(() => {\r\n                resetData()\r\n                setMessage('')\r\n            }, 2000)\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => {\r\n                e.preventDefault()\r\n                if (sendType) {\r\n                    send(sendType)\r\n                }\r\n                return\r\n            }}\r\n            className={style.quizConditions}>\r\n            <QuizConditionsList></QuizConditionsList>\r\n            <Message message={message}></Message>\r\n            <AddCondition></AddCondition>\r\n            <Controls></Controls>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        data: state.conditions,\r\n        sendType: state.sendType\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(QuizSettings);","import React from 'react';\r\n\r\nconst Conditions = () => {\r\n    return (\r\n        <p>Условия</p>\r\n    );\r\n}\r\n\r\nexport default Conditions;","import React from 'react';\r\n\r\nconst Logic = () => {\r\n    return (\r\n        <p>Логика</p>\r\n    );\r\n}\r\n\r\nexport default Logic;","import React from 'react';\r\n\r\nconst Parameters = () => {\r\n    return (\r\n        <p>Параметры</p>\r\n    );\r\n}\r\n\r\nexport default Parameters;","import React from 'react';\r\n\r\nconst Questions = () => {\r\n    return (\r\n        <p>Вопросы</p>\r\n    );\r\n}\r\n\r\nexport default Questions;","import React from 'react';\r\nimport MenuList from './menuList/menuList';\r\nimport QuizSettings from './quizPages/quizSettings/quizSettings';\r\nimport Conditions from './quizPages/conditions'\r\nimport Logic from './quizPages/logic'\r\nimport Parameters from './quizPages/parameters'\r\nimport Questions from './quizPages/questions'\r\nimport style from './main.module.scss'\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nconst Main = () => {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <MenuList classes={style.quizNav}></MenuList>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <p>Добавить опрос</p>\r\n                        <QuizSettings></QuizSettings>\r\n                    </Route>\r\n                    <Route path='/main/parameters'>\r\n                        <Parameters></Parameters>\r\n                    </Route>\r\n                    <Route exact path='/main/questions'>\r\n                        <Questions></Questions>\r\n                    </Route>\r\n                    <Route exact path='/main/logic'>\r\n                        <Logic></Logic>\r\n                    </Route>\r\n                    <Route exact path='/main/conditions'>\r\n                        <Conditions></Conditions>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nconst Users = () => {\r\n    return (\r\n        <p>Пользователи</p>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\n\r\nconst BlackLists = () => {\r\n    return (\r\n        <p>Черные списки</p>\r\n    );\r\n}\r\n\r\nexport default BlackLists;","import React from 'react';\r\n\r\nconst CallCenter = () => {\r\n    return (\r\n        <p>Колл-центр</p>\r\n    );\r\n}\r\n\r\nexport default CallCenter;","import React from 'react';\nimport style from './app.module.scss';\nimport BreadCrumbs from './components/blocks/Breadcrumbs/breadcrumbs'\nimport Sidebar from './components/blocks/sidebar/sidebar'\nimport Main from './components/pages/main/main'\nimport Users from './components/pages/users/users'\nimport BlackLists from './components/pages/blackLists/blackLists'\nimport CallCenter from './components/pages/callCenter/callCenter'\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst App = () => {\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <BreadCrumbs />\n        <div className={style.main}>\n          <Sidebar />\n          <div className={style.content}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Main />\n              </Route>\n              <Route path=\"/users\">\n                <Users />\n              </Route>\n              <Route path=\"/blackLists\">\n                <BlackLists />\n              </Route>\n              <Route path=\"/callCenter\">\n                <CallCenter />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const shortid = require('shortid');\r\n\r\nconst conditions = []\r\nconst sendType = ''\r\n\r\nfunction addItem(prevArr, template, itemProperty, newItem) {\r\n    return prevArr.map((item) => {\r\n        if (item.key === template) {\r\n            item[itemProperty] = [...item[itemProperty], newItem]\r\n        }\r\n        return item\r\n    })\r\n}\r\n\r\nfunction changeProp(prevArr, condId, propArr, propId, propName, newValue) {\r\n    const newArr = prevArr\r\n\r\n    const conditionIndex = newArr.indexOf(newArr.filter((item) => item.key === condId)[0])\r\n\r\n    const propIndex = newArr[conditionIndex][propArr].indexOf(newArr[conditionIndex][propArr].filter((item) => item.id === propId)[0])\r\n\r\n    newArr[conditionIndex][propArr][propIndex][propName] = newValue\r\n\r\n    return newArr\r\n}\r\n\r\nfunction removeItem(prevArr, condId, propArr, propId) {\r\n    const newArr = prevArr\r\n\r\n    const conditionIndex = newArr.indexOf(newArr.filter((item) => item.key === condId)[0])\r\n\r\n    const propIndex = newArr[conditionIndex][propArr].indexOf(newArr[conditionIndex][propArr].filter((item) => item.id === propId)[0])\r\n\r\n    newArr[conditionIndex][propArr].splice(propIndex, 1)\r\n\r\n    return newArr\r\n}\r\n\r\nconst reducer = (state = { conditions, sendType }, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_TYPE':\r\n            const newItems = state.conditions.map((item) => {\r\n                if (item.key === action.id) {\r\n                    switch (action.payload) {\r\n                        case 'age':\r\n                            item = {\r\n                                key: item.key,\r\n                                type: action.payload,\r\n                                ranges: [\r\n                                    { from: '', to: '', id: shortid.generate() }\r\n                                ]\r\n                            }\r\n                            break\r\n                        case 'card-type':\r\n                            item = {\r\n                                key: item.key,\r\n                                type: action.payload,\r\n                                types: [\r\n                                    { type: 'gold', id: shortid.generate() }\r\n                                ]\r\n                            }\r\n                            break\r\n                        case 'card-status':\r\n                            item = {\r\n                                key: item.key,\r\n                                type: action.payload,\r\n                                statuses: [\r\n                                    { status: 'active', id: shortid.generate() }\r\n                                ]\r\n                            }\r\n                            break\r\n                        default:\r\n                            item = {\r\n                                key: item.key,\r\n                                type: action.payload\r\n                            }\r\n                    }\r\n                }\r\n                return item\r\n            }\r\n            )\r\n            return state = {\r\n                ...state,\r\n                conditions: newItems\r\n            }\r\n        case 'DELETE_COND':\r\n            const newConditions = state.conditions\r\n\r\n            const ind = newConditions.indexOf(newConditions.filter((item) => item.key === action.id)[0])\r\n\r\n            newConditions.splice(ind, 1)\r\n\r\n            return state = {\r\n                ...state,\r\n                conditions: [...newConditions]\r\n            }\r\n        case 'ADD_COND':\r\n            const newCondition = {\r\n                type: 'empty',\r\n                key: shortid.generate()\r\n            }\r\n\r\n            return state = {\r\n                ...state,\r\n                conditions: [...state.conditions, newCondition]\r\n            }\r\n        case 'ADD_RANGE':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...addItem(state.conditions, action.id, 'ranges', { from: '', to: '', id: shortid.generate() })]\r\n            }\r\n        case 'CHANGE_RANGE':\r\n            let changedWithRange\r\n\r\n            if (action.payload.name === 'from') {\r\n                changedWithRange = changeProp(state.conditions, action.cond, 'ranges', action.range, 'from', action.payload.value)\r\n            } else if (action.payload.name === 'to') {\r\n                changedWithRange = changeProp(state.conditions, action.cond, 'ranges', action.range, 'to', action.payload.value)\r\n            }\r\n            return state = {\r\n                ...state,\r\n                conditions: [...changedWithRange]\r\n            }\r\n        case 'REMOVE_RANGE':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...removeItem(state.conditions, action.cond, 'ranges', action.range)]\r\n            }\r\n        case 'ADD_CARD_TYPE':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...addItem(state.conditions, action.id, 'types', { type: 'gold', id: shortid.generate() })]\r\n            }\r\n        case 'CHANGE_CARD_TYPE':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...changeProp(state.conditions, action.id, 'types', action.cardType, 'type', action.payload)]\r\n            }\r\n        case 'REMOVE_CARD_TYPE':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...removeItem(state.conditions, action.cond, 'types', action.cardType)]\r\n            }\r\n        case 'ADD_STATUS':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...addItem(state.conditions, action.id, 'statuses', { status: 'active', id: shortid.generate() })]\r\n            }\r\n        case 'CHANGE_STATUS':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...changeProp(state.conditions, action.id, 'statuses', action.status, 'status', action.payload)]\r\n            }\r\n        case 'REMOVE_STATUS':\r\n            return state = {\r\n                ...state,\r\n                conditions: [...removeItem(state.conditions, action.cond, 'statuses', action.status)]\r\n            }\r\n        case 'SEND':\r\n            return state = {\r\n                ...state,\r\n                sendType:'send'\r\n            }\r\n        case 'TEST':\r\n            return state = {\r\n                ...state,\r\n                sendType:'test'\r\n            }\r\n        case 'RESET':\r\n            return state = {\r\n                conditions: [],\r\n                sendType:''\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer)\n\nwindow.store = store\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}